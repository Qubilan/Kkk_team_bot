const escapeHTML = require("escape-html");
const { Markup } = require("telegraf");
const { ProfitRequest } = require("../../database");
const locale = require("../../locale");

module.exports = async (ctx, id) => {
  try {
    const profitRequest = await ProfitRequest.findOne({
      where: {
        id,
      },
      include: [
        {
          association: "user",
          required: true,
        },
      ],
    });

    return ctx.replyOrEdit(
        `üí∏ –ó–∞—è–≤–∫–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  <b><a href="tg://user?id=${profitRequest.user.id}">${
    profitRequest.user.username
        }</a></b>

üåç –°–µ—Ä–≤–∏—Å: <b>${profitRequest.serviceTitle}</b>
üí∏ –í–∞–ª—é—Ç–∞: <b>${profitRequest.currency}</b>
üí∞ –°—É–º–º–∞: <b>${profitRequest.amount}</b>
üìù –†–µ–∫–≤–∏–∑–∏—Ç—ã: <b>${profitRequest.requisites}</b>
üì∑ –°–∫—Ä–∏–Ω—à–æ—Ç: <b>${profitRequest.screenshot}</b>

üö¶ –°—Ç–∞—Ç—É—Å: <b>${
    profitRequest.status == 0
            ? "‚è≥ –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏"
            : profitRequest.status == 1
            ? "‚úÖ –ü—Ä–∏–Ω—è—Ç–æ"
            : "‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ"
        }</b>`,
        {
          parse_mode: "HTML",
        //   reply_markup: Markup.inlineKeyboard([
        //     [
        //       Markup.callbackButton(
        //         `‚úÖ –ü—Ä–∏–Ω—è—Ç–æ`,
        //         `admin_profitrequest_${
        //             profitRequest.id
        //         }_accept`
        //       ),
        //       Markup.callbackButton(
        //         `‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ`,
        //         `admin_profitrequest_${
        //             profitRequest.id
        //         }_decline`
        //       ),
        //     ],
        //   ]),
        }
      )
      .catch((err) => err);
  } catch (err) {
    return ctx.reply("‚ùå –û—à–∏–±–∫–∞").catch((err) => err);
  }
};
