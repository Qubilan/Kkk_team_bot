const WizardScene = require("telegraf/scenes/wizard");
const { Markup } = require("telegraf");
const {  User } = require("../database");
const instruments = require("../commands/instruments");

const scene = new WizardScene(
  "whatsapp_link",
  async (ctx) => {
    try {
      await ctx.scene.reply(`üìü <b>–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é —Å—Å—ã–ª–∫—É wa.me —Å –Ω–æ–º–µ—Ä–æ–º</b>
      
üìå <i>–≠—Ç–æ –∫–æ–º–∞–Ω–¥—É —Ç–∞–∫ –∂–µ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞–≤</i> <b>/wa</b>`, {
        reply_markup: Markup.inlineKeyboard([
          [Markup.callbackButton("–û—Ç–º–µ–Ω–∏—Ç—å", "cancel")],
        ]),
        parse_mode: "HTML"
      });
      return ctx.wizard.next();
    } catch (err) {
      ctx.reply("‚ùå –û—à–∏–±–∫–∞").catch((err) => err);
      return ctx.scene.leave();
    }
  },
  async (ctx) => {
    try {
      if (!ctx.message?.text) return ctx.wizard.prevStep();
      if (ctx.message.text.trim().length < 5 || isNaN(ctx.message.text.trim()))
        return ctx.wizard.prevStep();
      
      let number = ctx.message.text.trim();
      if (number[0] == "+") {
        number = number.slice(1);
      }
      
      await ctx.scene.reply(`<b>https://wa.me/${number}</b>`, {
        parse_mode: "HTML",
        disable_web_page_preview: true,
      });
      return ctx.scene.leave();
    } catch (err) {
      ctx.reply("‚ùå –û—à–∏–±–∫–∞").catch((err) => err);
      return ctx.scene.leave();
    }
  },
);

scene.leave(instruments);

module.exports = scene;
