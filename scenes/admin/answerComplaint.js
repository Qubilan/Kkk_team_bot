const { Markup } = require("telegraf");
const WizardScene = require("telegraf/scenes/wizard");
const { Complaint, Settings } = require("../../database");

const scene = new WizardScene(
  "admin_answer_complaint",
  async (ctx) => {
    try {
      await ctx.reply("‚úèÔ∏è <b>–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ:</b>", {
        parse_mode: "HTML",
        reply_markup: Markup.inlineKeyboard([
          [Markup.callbackButton("–û—Ç–º–µ–Ω–∏—Ç—å", "cancel")],
        ]),
      });

      return ctx.wizard.next();
    } catch (err) {
      ctx.reply("‚ùå –û—à–∏–±–∫–∞").catch((err) => err);
      return ctx.scene.leave();
    }
  },
  async (ctx) => {
    try {
      if (!ctx.message?.text) return ctx.wizard.prevStep();
      const answer = ctx.message.text.trim();
      const settings = await Settings.findByPk(1);
      const complaint = await Complaint.findByPk(ctx.scene.state.id);

      await complaint.update({
        isSolved: true,
      });
      await ctx.telegram.editMessageText(
        settings.logsGroupId,
        complaint.channelMessageId,
        complaint.channelMessageId,
        `üì¨ <b>–ù–æ–≤–∞—è –∂–∞–ª–æ–±–∞/–≤–æ–ø—Ä–æ—Å #${complaint.id}</b>

üîë <b>ID:</b> ${complaint.id}
üë®‚Äçüíª <b>–û—Ç:</b> <b><a href="tg://user?id=${complaint.userId}">${complaint.username}</a></b> <code>(ID: ${complaint.userId})</code>
üìù <b>–¢–µ–∫—Å—Ç:</b> ${complaint.text}
üìñ <b>–û—Ç–≤–µ—Ç:</b> ${answer}
<b>–°—Ç–∞—Ç—É—Å:</b> ‚úÖ –†–µ—à—ë–Ω`, {
  parse_mode: "HTML"
}
      );
      await ctx.telegram.sendMessage(complaint.userId,
        `‚ö†Ô∏è <b>–ù–∞ –≤–∞—à—É –∂–∞–ª–æ–±—É/–≤–æ–ø—Ä–æ—Å –ø—Ä–∏—à—ë–ª –æ—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b>
${answer}`, {
        parse_mode: "HTML",
      })
      await ctx.scene.reply("‚úÖ <b>–û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ—Å–ª–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!</b>", {
        parse_mode: "HTML"
      });
    } catch (err) {
      console.log(err)
      ctx.reply("‚ùå –û—à–∏–±–∫–∞").catch((err) => err);
    }
    return ctx.scene.leave();
  }
);

module.exports = scene;
